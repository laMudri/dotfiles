\documentclass[11pt]{article}
%Gummi|063|=)
\title{\textbf{Object oriented programming -- supervision 3}}
\author{James Wood}
\usepackage{listings}
\usepackage{bold-extra}
\usepackage{xcolor}
\ifx\pdftexversion\undefined
\usepackage[dvips]{graphicx}
\else
\usepackage[pdftex]{graphicx}
\DeclareGraphicsRule{*}{mps}{*}{}
\fi

\lstset{
  basicstyle=\ttfamily\small,
  basewidth=0.5em,
  frame=single,
  breaklines=true,
  %postbreak=\raisebox{0ex}[0ex][0ex]{
  %  \ensuremath{\color{red}\hookrightarrow\space}
  %}
}

\begin{document}

\maketitle

\section*{a}
The singleton pattern would be used. The singleton pattern ensures that only one instance of the class is created whilst the program is running. The \texttt{Configuration} class would have a static member of type \texttt{Configuration}, used whenever an instance of that type is needed. It will be modified each time it is used. The member will be private, and be accessed by a method that mutates it and then returns a reference to it.

\section*{b}
Behavioural patterns are patterns used to specify how objects interact, including specification of run time details. Creational patterns are used to control the building of new objects. Compositional patterns describe how objects of different types can be combined to form objects of new types.

The \textit{Bridge} and \textit{Strategy} patterns both allow an abstract task to be specified along with various implementations.***

\section*{c}

\section*{d}

\section*{e}

\end{document}
