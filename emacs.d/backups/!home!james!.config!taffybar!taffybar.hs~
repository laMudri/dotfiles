{-# LANGUAGE OverloadedStrings #-}
import System.Taffybar

import System.Taffybar.Systray
import System.Taffybar.TaffyPager
import System.Taffybar.SimpleClock
import System.Taffybar.FreedesktopNotifications
import System.Taffybar.Battery

import System.Taffybar.Widgets.PollingBar
import System.Taffybar.Widgets.PollingGraph

import System.Information.Memory
import System.Information.CPU

import Graphics.UI.Gtk.Abstract.Widget (Widget)

import qualified Data.Text as T
import Data.Monoid

memCallback :: IO [Double]
memCallback = do
  mi <- parseMeminfo
  return [memoryUsedRatio mi]
memCfg :: GraphConfig
memCfg = defaultGraphConfig { graphDataColors = [(1, 0, 0, 1)]
                            , graphLabel = Just "mem"
                            }

cpuCallback :: IO [Double]
cpuCallback = do
  (userLoad, systemLoad, totalLoad) <- cpuLoad
  return [totalLoad, systemLoad]
cpuCfg :: GraphConfig
cpuCfg = defaultGraphConfig
           { graphDataColors = [(0, 1, 0, 1), (1, 0, 1, 0.5)]
           , graphLabel = Just "cpu"
           }

pagerCfg :: PagerConfig
pagerCfg = defaultPagerConfig

noteFormatter :: Notification -> String
noteFormatter (Notification appName replaceId summary body expireTimeout id) =
  if T.null body then
    T.unpack summary
  else
    T.unpack $ mconcat
      ["<span fgcolor='red'>Note:</span> <span fgcolor='yellow'>",
       summary, ":</span> ", body]
noteCfg :: NotificationConfig
noteCfg = defaultNotificationConfig { notificationMaxTimeout = 60
                                    , notificationFormatter = noteFormatter
                                    }

batteryCfg :: BarConfig
batteryCfg = defaultBatteryConfig

clock,pager,note,mem,cpu,tray,battery :: IO Widget
clock = textClockNew Nothing "<span fgcolor='orange'>%a %F %H:%M</span>" 1
pager = taffyPagerNew pagerCfg
note = notifyAreaNew noteCfg
mem = pollingGraphNew memCfg 1 memCallback
cpu = pollingGraphNew cpuCfg 0.5 cpuCallback
tray = systrayNew
battery = batteryBarNew batteryCfg 60.0

main :: IO ()
main = defaultTaffybar defaultTaffybarConfig
         { startWidgets = [pager, note]
         , endWidgets = [clock, battery, mem, cpu, tray]
         }
