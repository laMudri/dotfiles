module Prefix
%default total
data Prefix : List a -> List a -> Type where
  PrefixNil : Prefix [] ys
  PrefixCons : Prefix xs ys -> Prefix (x :: xs) (y :: ys)
All : List Type -> Type
data PrefVect : Vect n (List a) -> Type where
  PrefNil : PrefVect []
  PrefCons : (x : List a) ->
             All (\y => Not (Prefix x y)) xs ->
             All (\y => Not (Prefix y x)) xs ->
             PrefVect (x :: xs)
